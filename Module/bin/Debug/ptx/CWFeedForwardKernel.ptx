//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19324574
// Cuda compilation tools, release 7.0, V7.0.27
// Based on LLVM 3.4svn
//

.version 4.2
.target sm_20, debug
.address_size 64

	// .globl	_Z3powfi
.visible .func  (.param .b32 func_retval0) _Z8_Pow_intIfET_S0_i
(
	.param .b32 _Z8_Pow_intIfET_S0_i_param_0,
	.param .b32 _Z8_Pow_intIfET_S0_i_param_1
)
;
.const .align 4 .u32 D_INPUT_UNITS;
.const .align 4 .u32 D_HIDDEN_UNITS;
.const .align 4 .u32 D_OUTPUT_UNITS;
.const .align 4 .u32 D_NEURONS_PER_GROUP;
.const .align 4 .u32 D_NEURON_GROUPS;
.const .align 4 .u32 D_ACTIVATION_FUNCTION;
.extern .shared .align 4 .b8 activeGroupsShared[];

.visible .func  (.param .b32 func_retval0) _Z3powfi(
	.param .b32 _Z3powfi_param_0,
	.param .b32 _Z3powfi_param_1
)
{
	.reg .f32 	%f<3>;
	.reg .s32 	%r<2>;


	.loc 4 1117 1
func_begin0:
	.loc	4 0 0

	.loc 4 1117 1

	ld.param.f32 	%f1, [_Z3powfi_param_0];
	ld.param.u32 	%r1, [_Z3powfi_param_1];
func_exec_begin0:
	.loc	4 1118 8
tmp0:
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f1;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z8_Pow_intIfET_S0_i, 
	(
	param0, 
	param1
	);
	ld.param.f32	%f2, [retval0+0];
	
	//{
	}// Callseq End 0
	st.param.f32	[func_retval0+0], %f2;
	ret;
tmp1:
func_end0:
}

	// .globl	_Z8_Pow_intIfET_S0_i
.visible .func  (.param .b32 func_retval0) _Z8_Pow_intIfET_S0_i(
	.param .b32 _Z8_Pow_intIfET_S0_i_param_0,
	.param .b32 _Z8_Pow_intIfET_S0_i_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<15>;
	.reg .s32 	%r<9>;


	.loc 4 1013 1
func_begin1:
	.loc	4 0 0

	.loc 4 1013 1

	ld.param.f32 	%f13, [_Z8_Pow_intIfET_S0_i_param_0];
	ld.param.u32 	%r6, [_Z8_Pow_intIfET_S0_i_param_1];
func_exec_begin1:
	.loc	4 1015 1
tmp2:
	setp.ge.s32	%p1, %r6, 0;
	not.pred 	%p2, %p1;
	@%p2 bra 	BB1_2;
	bra.uni 	BB1_1;

BB1_1:
	.loc	4 1016 1
tmp3:
	mov.b32 	%r8, %r6;
tmp4:
	bra.uni 	BB1_3;
tmp5:

BB1_2:
	.loc	4 1018 1
	neg.s32 	%r8, %r6;
tmp6:

BB1_3:
	mov.f32 	%f11, 0f3F800000;
	.loc	4 1019 1
tmp7:
	mov.f32 	%f14, %f11;
tmp8:

BB1_4:
	mov.pred 	%p3, 0;
	.loc	4 1019 1
tmp9:
	@%p3 bra 	BB1_14;
	bra.uni 	BB1_5;

BB1_5:
	.loc	4 1020 1
tmp10:
	and.b32  	%r7, %r8, 1;
	setp.ne.s32	%p4, %r7, 0;
	not.pred 	%p5, %p4;
	@%p5 bra 	BB1_7;
	bra.uni 	BB1_6;

BB1_6:
	.loc	4 1021 1
tmp11:
	mul.f32 	%f14, %f14, %f13;
tmp12:

BB1_7:
	.loc	4 1022 1
	shr.u32 	%r8, %r8, 1;
tmp13:
	setp.eq.s32	%p6, %r8, 0;
	not.pred 	%p7, %p6;
	@%p7 bra 	BB1_12;
	bra.uni 	BB1_8;

BB1_8:
	.loc	4 1023 1
tmp14:
	setp.lt.s32	%p8, %r6, 0;
	not.pred 	%p9, %p8;
	@%p9 bra 	BB1_10;
	bra.uni 	BB1_9;

BB1_9:
	rcp.rn.f32 	%f14, %f14;
	bra.uni 	BB1_11;

BB1_10:

BB1_11:
	bra.uni 	BB1_14;
tmp15:

BB1_12:

	.loc	4 1019 10
	mul.f32 	%f13, %f13, %f13;
tmp16:
	bra.uni 	BB1_4;

BB1_14:
	st.param.f32	[func_retval0+0], %f14;
	ret;
tmp17:
func_end1:
}

	// .globl	_Z4sqrtf
.visible .func  (.param .b32 func_retval0) _Z4sqrtf(
	.param .b32 _Z4sqrtf_param_0
)
{
	.reg .f32 	%f<5>;


	.loc 4 1135 1
func_begin2:
	.loc	4 0 0

	.loc 4 1135 1

	ld.param.f32 	%f1, [_Z4sqrtf_param_0];
	mov.f32 	%f2, %f1;
tmp18:
func_exec_begin2:
	.loc	4 1136 8
	bra.uni	tmp19;
tmp19:
	.loc	2 889 10
	sqrt.rn.f32 	%f3, %f2;
tmp20:
	.loc	4 1136 8
	mov.f32 	%f4, %f3;
	st.param.f32	[func_retval0+0], %f4;
	ret;
tmp21:
func_end2:
}

	// .globl	sigmoid
.visible .func  (.param .b32 func_retval0) sigmoid(
	.param .b32 sigmoid_param_0
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<21>;


	.loc 5 26 1
func_begin3:
	.loc	5 0 0

	.loc 5 26 1

	ld.param.f32 	%f6, [sigmoid_param_0];
func_exec_begin3:
	.loc	5 28 1
tmp22:
	neg.f32 	%f1, %f6;
tmp23:
	.loc	5 28 28
	bra.uni	tmp24;
tmp24:
	.loc	3 1083 10
	mul.f32 	%f9, %f1, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f10, %f9;
	mov.f32 	%f11, 0fBF317200;
	fma.rn.f32 	%f12, %f10, %f11, %f1;
	mov.f32 	%f13, 0fB5BFBE8E;
	fma.rn.f32 	%f14, %f10, %f13, %f12;
	mul.f32 	%f8, %f14, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f7,%f8;
	// inline asm
	add.f32 	%f15, %f10, 0f00000000;
	ex2.approx.f32 	%f16, %f15;
	mul.f32 	%f20, %f7, %f16;
	setp.lt.f32	%p1, %f1, 0fC2D20000;
	not.pred 	%p2, %p1;
	@%p2 bra 	BB3_2;
	bra.uni 	BB3_1;

BB3_1:
	mov.f32 	%f20, 0f00000000;

BB3_2:
	setp.gt.f32	%p3, %f1, 0f42D20000;
	not.pred 	%p4, %p3;
	@%p4 bra 	BB3_4;
	bra.uni 	BB3_3;
tmp25:

BB3_3:
	mov.f32 	%f20, 0f7F800000;

BB3_4:
	.loc	5 28 28
	add.f32 	%f18, %f20, 0f3F800000;
	rcp.rn.f32 	%f19, %f18;
	st.param.f32	[func_retval0+0], %f19;
	ret;
tmp26:
func_end3:
}

	// .globl	sigmoid_derivative
.visible .func  (.param .b32 func_retval0) sigmoid_derivative(
	.param .b32 sigmoid_derivative_param_0
)
{
	.reg .f32 	%f<7>;


	.loc 5 30 1
func_begin4:
	.loc	5 0 0

	.loc 5 30 1

	ld.param.f32 	%f1, [sigmoid_derivative_param_0];
func_exec_begin4:
	.loc	5 32 9
tmp27:
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f1;
	.param .b32 retval0;
	call.uni (retval0), 
	sigmoid, 
	(
	param0
	);
	ld.param.f32	%f2, [retval0+0];
	
	//{
	}// Callseq End 1
	.loc	5 32 34
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f1;
	.param .b32 retval0;
	call.uni (retval0), 
	sigmoid, 
	(
	param0
	);
	ld.param.f32	%f3, [retval0+0];
	
	//{
	}// Callseq End 2
	mov.f32 	%f4, 0f3F800000;
	sub.f32 	%f5, %f4, %f3;
	mul.f32 	%f6, %f2, %f5;
	st.param.f32	[func_retval0+0], %f6;
	ret;
tmp28:
func_end4:
}

	// .globl	tanh_derivative
.visible .func  (.param .b32 func_retval0) tanh_derivative(
	.param .b32 tanh_derivative_param_0
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<41>;
	.reg .s32 	%r<5>;


	.loc 5 37 1
func_begin5:
	.loc	5 0 0

	.loc 5 37 1

	ld.param.f32 	%f10, [tanh_derivative_param_0];
	mov.f32 	%f1, %f10;
tmp29:
func_exec_begin5:
	.loc	5 39 44
	bra.uni	tmp30;
tmp30:
	.loc	3 1108 10
	abs.f32 	%f2, %f1;
	setp.ge.f32	%p1, %f2, 0f3F0CCCCD;
	not.pred 	%p2, %p1;
	@%p2 bra 	BB5_4;
	bra.uni 	BB5_1;

BB5_1:
	add.f32 	%f24, %f2, %f2;
	mul.f32 	%f25, %f24, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f26, %f25;
	mov.f32 	%f27, 0fBF317200;
	fma.rn.f32 	%f28, %f26, %f27, %f24;
	mov.f32 	%f29, 0fB5BFBE8E;
	fma.rn.f32 	%f30, %f26, %f29, %f28;
	mul.f32 	%f21, %f30, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f20,%f21;
	// inline asm
	ex2.approx.f32 	%f31, %f26;
	mov.f32 	%f32, 0f3F800000;
	fma.rn.f32 	%f23, %f20, %f31, %f32;
	// inline asm
	rcp.approx.ftz.f32 %f22,%f23;
	// inline asm
	mov.f32 	%f33, 0fC0000000;
	fma.rn.f32 	%f39, %f22, %f33, %f32;
	setp.ge.f32	%p5, %f2, 0f42B00000;
	not.pred 	%p6, %p5;
	@%p6 bra 	BB5_3;
	bra.uni 	BB5_2;

BB5_2:
	mov.f32 	%f39, 0f3F800000;

BB5_3:
	mov.b32 	 %r1, %f39;
	mov.b32 	 %r2, %f1;
	and.b32  	%r3, %r2, -2147483648;
	or.b32  	%r4, %r1, %r3;
	mov.b32 	 %f40, %r4;
	bra.uni 	BB5_7;

BB5_4:
	mul.f32 	%f11, %f1, %f1;
	mov.f32 	%f12, 0fBD57BE66;
	mov.f32 	%f13, 0f3C86A81B;
	fma.rn.f32 	%f14, %f13, %f11, %f12;
	mov.f32 	%f15, 0f3E08677B;
	fma.rn.f32 	%f16, %f14, %f11, %f15;
	mov.f32 	%f17, 0fBEAAAA29;
	fma.rn.f32 	%f18, %f16, %f11, %f17;
	mul.f32 	%f19, %f18, %f11;
	fma.rn.f32 	%f40, %f19, %f1, %f1;
	setp.eq.f32	%p3, %f1, 0f00000000;
	not.pred 	%p4, %p3;
	@%p4 bra 	BB5_6;
	bra.uni 	BB5_5;

BB5_5:
	add.f32 	%f40, %f1, %f1;
tmp31:

BB5_6:

BB5_7:
	.loc	5 39 44
	mov.f32 	%f35, %f40;
tmp32:
	.loc	5 40 1
	mul.f32 	%f36, %f35, %f35;
	mov.f32 	%f37, 0f3F800000;
	sub.f32 	%f38, %f37, %f36;
	st.param.f32	[func_retval0+0], %f38;
	ret;
tmp33:
func_end5:
}

	// .globl	identity
.visible .func  (.param .b32 func_retval0) identity(
	.param .b32 identity_param_0
)
{
	.reg .f32 	%f<3>;


	.loc 5 43 1
func_begin6:
	.loc	5 0 0

	.loc 5 43 1

	ld.param.f32 	%f1, [identity_param_0];
func_exec_begin6:
	.loc	5 45 1
tmp34:
	mov.f32 	%f2, %f1;
	st.param.f32	[func_retval0+0], %f2;
	ret;
tmp35:
func_end6:
}

	// .globl	identity_derivative
.visible .func  (.param .b32 func_retval0) identity_derivative(
	.param .b32 identity_derivative_param_0
)
{
	.local .align 4 .b8 	__local_depot7[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<4>;
	.reg .s64 	%rd<2>;


	.loc 5 47 1
func_begin7:
	.loc	5 0 0

	.loc 5 47 1

	mov.u64 	%rd1, __local_depot7;
	cvta.local.u64 	%SP, %rd1;
	ld.param.f32 	%f1, [identity_derivative_param_0];
	st.f32 	[%SP+0], %f1;
	mov.f32 	%f2, 0f3F800000;
func_exec_begin7:
	.loc	5 49 1
tmp36:
	mov.f32 	%f3, %f2;
	st.param.f32	[func_retval0+0], %f3;
	ret;
tmp37:
func_end7:
}

	// .globl	gaussian
.visible .func  (.param .b32 func_retval0) gaussian(
	.param .b32 gaussian_param_0
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<21>;
	.reg .s32 	%r<2>;


	.loc 5 52 1
func_begin8:
	.loc	5 0 0

	.loc 5 52 1

	ld.param.f32 	%f6, [gaussian_param_0];
	mov.u32 	%r1, 2;
func_exec_begin8:
	.loc	5 54 16
tmp38:
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f6;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z3powfi, 
	(
	param0, 
	param1
	);
	ld.param.f32	%f9, [retval0+0];
	
	//{
	}// Callseq End 3
	neg.f32 	%f1, %f9;
tmp39:
	.loc	5 54 8
	bra.uni	tmp40;
tmp40:
	.loc	3 1083 10
	mul.f32 	%f10, %f1, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f11, %f10;
	mov.f32 	%f12, 0fBF317200;
	fma.rn.f32 	%f13, %f11, %f12, %f1;
	mov.f32 	%f14, 0fB5BFBE8E;
	fma.rn.f32 	%f15, %f11, %f14, %f13;
	mul.f32 	%f8, %f15, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f7,%f8;
	// inline asm
	add.f32 	%f16, %f11, 0f00000000;
	ex2.approx.f32 	%f17, %f16;
	mul.f32 	%f20, %f7, %f17;
	setp.lt.f32	%p1, %f1, 0fC2D20000;
	not.pred 	%p2, %p1;
	@%p2 bra 	BB8_2;
	bra.uni 	BB8_1;

BB8_1:
	mov.f32 	%f20, 0f00000000;

BB8_2:
	setp.gt.f32	%p3, %f1, 0f42D20000;
	not.pred 	%p4, %p3;
	@%p4 bra 	BB8_4;
	bra.uni 	BB8_3;
tmp41:

BB8_3:
	mov.f32 	%f20, 0f7F800000;

BB8_4:
	.loc	5 54 8
	mov.f32 	%f19, %f20;
	st.param.f32	[func_retval0+0], %f19;
	ret;
tmp42:
func_end8:
}

	// .globl	gaussian_derivative
.visible .func  (.param .b32 func_retval0) gaussian_derivative(
	.param .b32 gaussian_derivative_param_0
)
{
	.reg .f32 	%f<5>;


	.loc 5 56 1
func_begin9:
	.loc	5 0 0

	.loc 5 56 1

	ld.param.f32 	%f1, [gaussian_derivative_param_0];
func_exec_begin9:
	.loc	5 58 1
tmp43:
	mul.f32 	%f2, %f1, 0fC0000000;
	.loc	5 58 25
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f1;
	.param .b32 retval0;
	call.uni (retval0), 
	gaussian, 
	(
	param0
	);
	ld.param.f32	%f3, [retval0+0];
	
	//{
	}// Callseq End 4
	mul.f32 	%f4, %f2, %f3;
	st.param.f32	[func_retval0+0], %f4;
	ret;
tmp44:
func_end9:
}

	// .globl	rationalsigmoid
.visible .func  (.param .b32 func_retval0) rationalsigmoid(
	.param .b32 rationalsigmoid_param_0
)
{
	.reg .f32 	%f<10>;
	.reg .f64 	%fd<3>;


	.loc 5 61 1
func_begin10:
	.loc	5 0 0

	.loc 5 61 1

	ld.param.f32 	%f1, [rationalsigmoid_param_0];
func_exec_begin10:
	.loc	5 63 1
tmp45:
	cvt.f64.f32	%fd1, %f1;
	cvt.rn.f32.f64	%f2, %fd1;
	mul.f32 	%f3, %f1, %f1;
	add.f32 	%f4, %f3, 0f3F800000;
	.loc	5 63 58
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f4;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z4sqrtf, 
	(
	param0
	);
	ld.param.f32	%f5, [retval0+0];
	
	//{
	}// Callseq End 5
	add.f32 	%f6, %f5, 0f3F800000;
	cvt.f64.f32	%fd2, %f6;
	cvt.rn.f32.f64	%f7, %fd2;
tmp46:
	.loc	5 63 16
	bra.uni	tmp47;
tmp47:
	.loc	2 1442 3
	div.rn.f32 	%f8, %f2, %f7;
tmp48:
	.loc	5 63 16
	mov.f32 	%f9, %f8;
	st.param.f32	[func_retval0+0], %f9;
	ret;
tmp49:
func_end10:
}

	// .globl	rationalsigmoid_derivative
.visible .func  (.param .b32 func_retval0) rationalsigmoid_derivative(
	.param .b32 rationalsigmoid_derivative_param_0
)
{
	.reg .f32 	%f<8>;


	.loc 5 65 1
func_begin11:
	.loc	5 0 0

	.loc 5 65 1

	ld.param.f32 	%f1, [rationalsigmoid_derivative_param_0];
func_exec_begin11:
	.loc	5 67 1
tmp50:
	mul.f32 	%f2, %f1, %f1;
	add.f32 	%f3, %f2, 0f3F800000;
	.loc	5 67 44
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f3;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z4sqrtf, 
	(
	param0
	);
	ld.param.f32	%f4, [retval0+0];
	
	//{
	}// Callseq End 6
tmp51:
	.loc	5 68 1
	add.f32 	%f5, %f4, 0f3F800000;
	mul.f32 	%f6, %f4, %f5;
	rcp.rn.f32 	%f7, %f6;
	st.param.f32	[func_retval0+0], %f7;
	ret;
tmp52:
func_end11:
}

	// .globl	rectifiedLinearUnit
.visible .func  (.param .b32 func_retval0) rectifiedLinearUnit(
	.param .b32 rectifiedLinearUnit_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<7>;


	.loc 5 71 1
func_begin12:
	.loc	5 0 0

	.loc 5 71 1

	ld.param.f32 	%f4, [rectifiedLinearUnit_param_0];
func_exec_begin12:
	.loc	5 73 1
tmp53:
	setp.gt.f32	%p1, %f4, 0f00000000;
	not.pred 	%p2, %p1;
	@%p2 bra 	BB12_2;
	bra.uni 	BB12_1;

BB12_1:
	.loc	5 74 1
tmp54:
	mov.f32 	%f6, %f4;
	bra.uni 	BB12_3;
tmp55:

BB12_2:
	mov.f32 	%f5, 0f00000000;
	.loc	5 75 1
	mov.f32 	%f6, %f5;

BB12_3:
	st.param.f32	[func_retval0+0], %f6;
	ret;
tmp56:
func_end12:
}

	// .globl	rectifiedLinearUnit_derivative
.visible .func  (.param .b32 func_retval0) rectifiedLinearUnit_derivative(
	.param .b32 rectifiedLinearUnit_derivative_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .s32 	%r<2>;


	.loc 5 78 1
func_begin13:
	.loc	5 0 0

	.loc 5 78 1

	ld.param.f32 	%f1, [rectifiedLinearUnit_derivative_param_0];
func_exec_begin13:
	.loc	5 80 1
tmp57:
	setp.gt.f32	%p1, %f1, 0f00000000;
	selp.u32	%r1, 1, 0, %p1;
	cvt.rn.f32.s32	%f2, %r1;
	st.param.f32	[func_retval0+0], %f2;
	ret;
tmp58:
func_end13:
}

	// .globl	RBMbinary
.visible .func  (.param .b32 func_retval0) RBMbinary(
	.param .b32 RBMbinary_param_0,
	.param .b32 RBMbinary_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<5>;
	.reg .s32 	%r<2>;


	.loc 5 83 1
func_begin14:
	.loc	5 0 0

	.loc 5 83 1

	ld.param.f32 	%f1, [RBMbinary_param_0];
	ld.param.f32 	%f2, [RBMbinary_param_1];
func_exec_begin14:
	.loc	5 85 26
tmp59:
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f1;
	.param .b32 retval0;
	call.uni (retval0), 
	sigmoid, 
	(
	param0
	);
	ld.param.f32	%f3, [retval0+0];
	
	//{
	}// Callseq End 7
	setp.lt.f32	%p1, %f2, %f3;
	selp.u32	%r1, 1, 0, %p1;
	cvt.rn.f32.s32	%f4, %r1;
	st.param.f32	[func_retval0+0], %f4;
	ret;
tmp60:
func_end14:
}

	// .globl	Evaluate
.visible .func  (.param .b32 func_retval0) Evaluate(
	.param .b32 Evaluate_param_0,
	.param .b32 Evaluate_param_1
)
{
	.reg .pred 	%p<18>;
	.reg .f32 	%f<48>;
	.reg .s32 	%r<6>;


	.loc 5 89 1
func_begin15:
	.loc	5 0 0

	.loc 5 89 1

	ld.param.u32 	%r1, [Evaluate_param_0];
	ld.param.f32 	%f19, [Evaluate_param_1];
func_exec_begin15:
	.loc	5 91 1
tmp61:
	setp.lt.s32	%p1, %r1, 3;
	not.pred 	%p2, %p1;
	@%p2 bra 	BB15_4;
	bra.uni 	BB15_1;

BB15_1:
	setp.eq.s32	%p9, %r1, 0;
	@%p9 bra 	BB15_22;
	bra.uni 	BB15_2;

BB15_2:
	setp.eq.s32	%p10, %r1, 1;
	@%p10 bra 	BB15_9;
	bra.uni 	BB15_3;

BB15_3:
	setp.eq.s32	%p11, %r1, 2;
	@%p11 bra 	BB15_10;
	bra.uni 	BB15_23;

BB15_4:
	setp.lt.s32	%p3, %r1, 5;
	not.pred 	%p4, %p3;
	@%p4 bra 	BB15_7;
	bra.uni 	BB15_5;

BB15_5:
	setp.eq.s32	%p7, %r1, 3;
	@%p7 bra 	BB15_11;
	bra.uni 	BB15_6;

BB15_6:
	setp.eq.s32	%p8, %r1, 4;
	@%p8 bra 	BB15_12;
	bra.uni 	BB15_23;

BB15_7:
	setp.eq.s32	%p5, %r1, 5;
	@%p5 bra 	BB15_13;
	bra.uni 	BB15_8;

BB15_8:
	setp.eq.s32	%p6, %r1, 6;
	@%p6 bra 	BB15_14;
	bra.uni 	BB15_23;

BB15_9:
	.loc	5 94 8
tmp62:
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f19;
	.param .b32 retval0;
	call.uni (retval0), 
	sigmoid, 
	(
	param0
	);
	ld.param.f32	%f47, [retval0+0];
	
	//{
	}// Callseq End 12
	bra.uni 	BB15_24;

BB15_10:
	.loc	5 97 8
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f19;
	.param .b32 retval0;
	call.uni (retval0), 
	identity, 
	(
	param0
	);
	ld.param.f32	%f47, [retval0+0];
	
	//{
	}// Callseq End 11
	bra.uni 	BB15_24;

BB15_11:
	.loc	5 100 8
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f19;
	.param .b32 retval0;
	call.uni (retval0), 
	gaussian, 
	(
	param0
	);
	ld.param.f32	%f47, [retval0+0];
	
	//{
	}// Callseq End 10
	bra.uni 	BB15_24;

BB15_12:
	.loc	5 103 8
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f19;
	.param .b32 retval0;
	call.uni (retval0), 
	rationalsigmoid, 
	(
	param0
	);
	ld.param.f32	%f47, [retval0+0];
	
	//{
	}// Callseq End 9
	bra.uni 	BB15_24;

BB15_13:
	.loc	5 106 8
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f19;
	.param .b32 retval0;
	call.uni (retval0), 
	rectifiedLinearUnit, 
	(
	param0
	);
	ld.param.f32	%f47, [retval0+0];
	
	//{
	}// Callseq End 8
	bra.uni 	BB15_24;

BB15_14:
	mov.f32 	%f6, %f19;
tmp63:
	.loc	5 109 8
	bra.uni	tmp64;
tmp64:
	.loc	3 1108 10
	abs.f32 	%f7, %f6;
	setp.ge.f32	%p12, %f7, 0f3F0CCCCD;
	not.pred 	%p13, %p12;
	@%p13 bra 	BB15_18;
	bra.uni 	BB15_15;

BB15_15:
	add.f32 	%f33, %f7, %f7;
	mul.f32 	%f34, %f33, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f35, %f34;
	mov.f32 	%f36, 0fBF317200;
	fma.rn.f32 	%f37, %f35, %f36, %f33;
	mov.f32 	%f38, 0fB5BFBE8E;
	fma.rn.f32 	%f39, %f35, %f38, %f37;
	mul.f32 	%f30, %f39, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f29,%f30;
	// inline asm
	ex2.approx.f32 	%f40, %f35;
	mov.f32 	%f41, 0f3F800000;
	fma.rn.f32 	%f32, %f29, %f40, %f41;
	// inline asm
	rcp.approx.ftz.f32 %f31,%f32;
	// inline asm
	mov.f32 	%f42, 0fC0000000;
	fma.rn.f32 	%f45, %f31, %f42, %f41;
	setp.ge.f32	%p16, %f7, 0f42B00000;
	not.pred 	%p17, %p16;
	@%p17 bra 	BB15_17;
	bra.uni 	BB15_16;

BB15_16:
	mov.f32 	%f45, 0f3F800000;

BB15_17:
	mov.b32 	 %r2, %f45;
	mov.b32 	 %r3, %f6;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b32 	 %f46, %r5;
	bra.uni 	BB15_21;

BB15_18:
	mul.f32 	%f20, %f6, %f6;
	mov.f32 	%f21, 0fBD57BE66;
	mov.f32 	%f22, 0f3C86A81B;
	fma.rn.f32 	%f23, %f22, %f20, %f21;
	mov.f32 	%f24, 0f3E08677B;
	fma.rn.f32 	%f25, %f23, %f20, %f24;
	mov.f32 	%f26, 0fBEAAAA29;
	fma.rn.f32 	%f27, %f25, %f20, %f26;
	mul.f32 	%f28, %f27, %f20;
	fma.rn.f32 	%f46, %f28, %f6, %f6;
	setp.eq.f32	%p14, %f6, 0f00000000;
	not.pred 	%p15, %p14;
	@%p15 bra 	BB15_20;
	bra.uni 	BB15_19;

BB15_19:
	add.f32 	%f46, %f6, %f6;
tmp65:

BB15_20:

BB15_21:
	.loc	5 109 8
	mov.f32 	%f47, %f46;
	bra.uni 	BB15_24;

BB15_22:
	.loc	5 112 1
	mov.f32 	%f47, %f19;
	bra.uni 	BB15_24;

BB15_23:
	mov.f32 	%f44, 0f00000000;
	.loc	5 115 1
	mov.f32 	%f47, %f44;

BB15_24:
	st.param.f32	[func_retval0+0], %f47;
	ret;
tmp66:
func_end15:
}

	// .globl	EvaluateDerivative
.visible .func  (.param .b32 func_retval0) EvaluateDerivative(
	.param .b32 EvaluateDerivative_param_0,
	.param .b32 EvaluateDerivative_param_1
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<14>;
	.reg .s32 	%r<2>;


	.loc 5 119 1
func_begin16:
	.loc	5 0 0

	.loc 5 119 1

	ld.param.u32 	%r1, [EvaluateDerivative_param_0];
	ld.param.f32 	%f10, [EvaluateDerivative_param_1];
func_exec_begin16:
	.loc	5 121 1
tmp67:
	setp.lt.s32	%p1, %r1, 3;
	not.pred 	%p2, %p1;
	@%p2 bra 	BB16_4;
	bra.uni 	BB16_1;

BB16_1:
	setp.eq.s32	%p9, %r1, 0;
	@%p9 bra 	BB16_15;
	bra.uni 	BB16_2;

BB16_2:
	setp.eq.s32	%p10, %r1, 1;
	@%p10 bra 	BB16_9;
	bra.uni 	BB16_3;

BB16_3:
	setp.eq.s32	%p11, %r1, 2;
	@%p11 bra 	BB16_10;
	bra.uni 	BB16_16;

BB16_4:
	setp.lt.s32	%p3, %r1, 5;
	not.pred 	%p4, %p3;
	@%p4 bra 	BB16_7;
	bra.uni 	BB16_5;

BB16_5:
	setp.eq.s32	%p7, %r1, 3;
	@%p7 bra 	BB16_11;
	bra.uni 	BB16_6;

BB16_6:
	setp.eq.s32	%p8, %r1, 4;
	@%p8 bra 	BB16_12;
	bra.uni 	BB16_16;

BB16_7:
	setp.eq.s32	%p5, %r1, 5;
	@%p5 bra 	BB16_13;
	bra.uni 	BB16_8;

BB16_8:
	setp.eq.s32	%p6, %r1, 6;
	@%p6 bra 	BB16_14;
	bra.uni 	BB16_16;

BB16_9:
	.loc	5 124 8
tmp68:
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f10;
	.param .b32 retval0;
	call.uni (retval0), 
	sigmoid_derivative, 
	(
	param0
	);
	ld.param.f32	%f13, [retval0+0];
	
	//{
	}// Callseq End 18
	bra.uni 	BB16_17;

BB16_10:
	.loc	5 127 8
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f10;
	.param .b32 retval0;
	call.uni (retval0), 
	identity_derivative, 
	(
	param0
	);
	ld.param.f32	%f13, [retval0+0];
	
	//{
	}// Callseq End 17
	bra.uni 	BB16_17;

BB16_11:
	.loc	5 130 8
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f10;
	.param .b32 retval0;
	call.uni (retval0), 
	gaussian_derivative, 
	(
	param0
	);
	ld.param.f32	%f13, [retval0+0];
	
	//{
	}// Callseq End 16
	bra.uni 	BB16_17;

BB16_12:
	.loc	5 133 8
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f10;
	.param .b32 retval0;
	call.uni (retval0), 
	rationalsigmoid_derivative, 
	(
	param0
	);
	ld.param.f32	%f13, [retval0+0];
	
	//{
	}// Callseq End 15
	bra.uni 	BB16_17;

BB16_13:
	.loc	5 136 8
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f10;
	.param .b32 retval0;
	call.uni (retval0), 
	rectifiedLinearUnit_derivative, 
	(
	param0
	);
	ld.param.f32	%f13, [retval0+0];
	
	//{
	}// Callseq End 14
	bra.uni 	BB16_17;

BB16_14:
	.loc	5 139 8
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f10;
	.param .b32 retval0;
	call.uni (retval0), 
	tanh_derivative, 
	(
	param0
	);
	ld.param.f32	%f13, [retval0+0];
	
	//{
	}// Callseq End 13
	bra.uni 	BB16_17;

BB16_15:
	mov.f32 	%f11, 0f3F800000;
	.loc	5 142 1
	mov.f32 	%f13, %f11;
	bra.uni 	BB16_17;

BB16_16:
	mov.f32 	%f12, 0f00000000;
	.loc	5 145 1
	mov.f32 	%f13, %f12;

BB16_17:
	st.param.f32	[func_retval0+0], %f13;
	ret;
tmp69:
func_end16:
}

	// .globl	CWFeedforwardHiddenKernel
.visible .entry CWFeedforwardHiddenKernel(
	.param .u64 CWFeedforwardHiddenKernel_param_0,
	.param .u64 CWFeedforwardHiddenKernel_param_1,
	.param .u64 CWFeedforwardHiddenKernel_param_2,
	.param .u64 CWFeedforwardHiddenKernel_param_3,
	.param .u64 CWFeedforwardHiddenKernel_param_4,
	.param .u64 CWFeedforwardHiddenKernel_param_5,
	.param .u64 CWFeedforwardHiddenKernel_param_6
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<18>;
	.reg .s32 	%r<41>;
	.reg .s64 	%rd<55>;


	.loc 1 24 1
func_begin17:
	.loc	1 0 0

	.loc 1 24 1

	ld.param.u64 	%rd1, [CWFeedforwardHiddenKernel_param_0];
	ld.param.u64 	%rd2, [CWFeedforwardHiddenKernel_param_1];
	ld.param.u64 	%rd3, [CWFeedforwardHiddenKernel_param_2];
	ld.param.u64 	%rd4, [CWFeedforwardHiddenKernel_param_3];
	ld.param.u64 	%rd5, [CWFeedforwardHiddenKernel_param_4];
	ld.param.u64 	%rd6, [CWFeedforwardHiddenKernel_param_5];
	ld.param.u64 	%rd7, [CWFeedforwardHiddenKernel_param_6];
func_exec_begin17:
	.loc	1 34 1
tmp70:
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %ctaid.y;
	mul.lo.s32 	%r17, %r15, %r16;
	mov.u32 	%r18, %nctaid.x;
	mul.lo.s32 	%r19, %r17, %r18;
	mov.u32 	%r20, %ntid.x;
	mov.u32 	%r21, %ctaid.x;
	mul.lo.s32 	%r22, %r20, %r21;
	add.s32 	%r23, %r19, %r22;
	mov.u32 	%r24, %tid.x;
	add.s32 	%r1, %r23, %r24;
tmp71:
	.loc	1 40 1
	mov.u64 	%rd8, D_NEURON_GROUPS;
	cvta.const.u64 	%rd9, %rd8;
	ld.u32 	%r25, [%rd9];
	setp.lt.s32	%p3, %r1, %r25;
	not.pred 	%p4, %p3;
	@%p4 bra 	BB17_2;
	bra.uni 	BB17_1;

BB17_1:
	.loc	1 42 1
tmp72:
	cvt.s64.s32	%rd10, %r1;
	shl.b64 	%rd11, %rd10, 2;
	add.s64 	%rd12, %rd7, %rd11;
	ld.u32 	%r26, [%rd12];
	cvt.rn.f32.s32	%f6, %r26;
	mov.u64 	%rd13, activeGroupsShared;
	cvta.shared.u64 	%rd14, %rd13;
	cvt.s64.s32	%rd15, %r1;
	shl.b64 	%rd16, %rd15, 2;
	add.s64 	%rd17, %rd14, %rd16;
	st.f32 	[%rd17], %f6;
tmp73:

BB17_2:
	.loc	1 44 1
	bar.sync 	0;

	.loc	1 46 1
	mov.u64 	%rd18, D_NEURONS_PER_GROUP;
	cvta.const.u64 	%rd19, %rd18;
	ld.u32 	%r27, [%rd19];
	div.s32 	%r2, %r1, %r27;
tmp74:
	.loc	1 48 1
	mov.u64 	%rd20, D_HIDDEN_UNITS;
	cvta.const.u64 	%rd21, %rd20;
	ld.u32 	%r28, [%rd21];
	setp.lt.s32	%p6, %r1, %r28;
	mov.pred 	%p13, 0;
	not.pred 	%p7, %p6;
	@%p7 bra 	BB17_5;
	bra.uni 	BB17_4;

BB17_4:
	mov.u64 	%rd22, activeGroupsShared;
	cvta.shared.u64 	%rd23, %rd22;
	cvt.s64.s32	%rd24, %r2;
	shl.b64 	%rd25, %rd24, 2;
	add.s64 	%rd26, %rd23, %rd25;
	ld.f32 	%f7, [%rd26];
	setp.eq.f32	%p13, %f7, 0f3F800000;

BB17_5:
	not.pred 	%p8, %p13;
	@%p8 bra 	BB17_15;
	bra.uni 	BB17_6;

BB17_6:
	.loc	1 50 1
tmp75:
	mov.u64 	%rd27, D_INPUT_UNITS;
	cvta.const.u64 	%rd28, %rd27;
	ld.u32 	%r29, [%rd28];
	mul.lo.s32 	%r37, %r1, %r29;
tmp76:
	mov.f32 	%f8, 0f00000000;
	.loc	1 52 1
	mov.f32 	%f17, %f8;
tmp77:
	mov.u32 	%r30, 0;
	.loc	1 53 1
tmp78:
	mov.b32 	%r38, %r30;
tmp79:

BB17_7:
	.loc	1 53 1
	mov.u64 	%rd29, D_INPUT_UNITS;
	cvta.const.u64 	%rd30, %rd29;
	ld.u32 	%r31, [%rd30];
	setp.lt.s32	%p9, %r38, %r31;
	not.pred 	%p10, %p9;
	@%p10 bra 	BB17_10;
	bra.uni 	BB17_8;

BB17_8:
	.loc	1 55 1
tmp80:
	cvt.s64.s32	%rd49, %r37;
	shl.b64 	%rd50, %rd49, 2;
	add.s64 	%rd51, %rd5, %rd50;
	ld.f32 	%f14, [%rd51];
	cvt.s64.s32	%rd52, %r38;
	shl.b64 	%rd53, %rd52, 2;
	add.s64 	%rd54, %rd1, %rd53;
	ld.f32 	%f15, [%rd54];
	mul.f32 	%f16, %f14, %f15;
	add.f32 	%f17, %f17, %f16;
tmp81:
	.loc	1 56 1
	add.s32 	%r37, %r37, 1;
tmp82:

	.loc	1 53 29
	add.s32 	%r38, %r38, 1;
tmp83:
	bra.uni 	BB17_7;
tmp84:

BB17_10:
	.loc	1 59 1
	mov.u64 	%rd31, D_HIDDEN_UNITS;
	cvta.const.u64 	%rd32, %rd31;
	ld.u32 	%r32, [%rd32];
	mul.lo.s32 	%r39, %r1, %r32;
tmp85:
	mov.u32 	%r33, 0;
	.loc	1 61 1
tmp86:
	mov.b32 	%r40, %r33;
tmp87:

BB17_11:
	.loc	1 61 1
	mov.u64 	%rd33, D_HIDDEN_UNITS;
	cvta.const.u64 	%rd34, %rd33;
	ld.u32 	%r34, [%rd34];
	setp.lt.s32	%p11, %r40, %r34;
	not.pred 	%p12, %p11;
	@%p12 bra 	BB17_14;
	bra.uni 	BB17_12;

BB17_12:
	.loc	1 63 1
tmp88:
	cvt.s64.s32	%rd43, %r39;
	shl.b64 	%rd44, %rd43, 2;
	add.s64 	%rd45, %rd6, %rd44;
	ld.f32 	%f11, [%rd45];
	cvt.s64.s32	%rd46, %r40;
	shl.b64 	%rd47, %rd46, 2;
	add.s64 	%rd48, %rd3, %rd47;
	ld.f32 	%f12, [%rd48];
	mul.f32 	%f13, %f11, %f12;
	add.f32 	%f17, %f17, %f13;
tmp89:
	.loc	1 64 1
	add.s32 	%r39, %r39, 1;
tmp90:

	.loc	1 61 30
	add.s32 	%r40, %r40, 1;
tmp91:
	bra.uni 	BB17_11;
tmp92:

BB17_14:
	.loc	1 70 1
	mov.u64 	%rd35, D_ACTIVATION_FUNCTION;
	cvta.const.u64 	%rd36, %rd35;
	ld.u32 	%r35, [%rd36];
	.loc	1 70 68
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r35;
	.param .b32 param1;
	st.param.f32	[param1+0], %f17;
	.param .b32 retval0;
	call.uni (retval0), 
	Evaluate, 
	(
	param0, 
	param1
	);
	ld.param.f32	%f9, [retval0+0];
	
	//{
	}// Callseq End 19
	cvt.s64.s32	%rd37, %r1;
	shl.b64 	%rd38, %rd37, 2;
	add.s64 	%rd39, %rd2, %rd38;
	st.f32 	[%rd39], %f9;
	.loc	1 71 1
	ld.u32 	%r36, [%rd36];
	.loc	1 71 78
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r36;
	.param .b32 param1;
	st.param.f32	[param1+0], %f17;
	.param .b32 retval0;
	call.uni (retval0), 
	EvaluateDerivative, 
	(
	param0, 
	param1
	);
	ld.param.f32	%f10, [retval0+0];
	
	//{
	}// Callseq End 20
	cvt.s64.s32	%rd40, %r1;
	shl.b64 	%rd41, %rd40, 2;
	add.s64 	%rd42, %rd4, %rd41;
	st.f32 	[%rd42], %f10;
tmp93:

BB17_15:
	.loc	1 73 2
	ret;
tmp94:
func_end17:
}

	// .globl	CWFeedforwardOutputKernel
.visible .entry CWFeedforwardOutputKernel(
	.param .u64 CWFeedforwardOutputKernel_param_0,
	.param .u64 CWFeedforwardOutputKernel_param_1,
	.param .u64 CWFeedforwardOutputKernel_param_2,
	.param .u64 CWFeedforwardOutputKernel_param_3
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<11>;
	.reg .s32 	%r<26>;
	.reg .s64 	%rd<25>;


	.loc 1 75 1
func_begin18:
	.loc	1 0 0

	.loc 1 75 1

	ld.param.u64 	%rd1, [CWFeedforwardOutputKernel_param_0];
	ld.param.u64 	%rd2, [CWFeedforwardOutputKernel_param_1];
	ld.param.u64 	%rd3, [CWFeedforwardOutputKernel_param_2];
	ld.param.u64 	%rd4, [CWFeedforwardOutputKernel_param_3];
func_exec_begin18:
	.loc	1 77 1
tmp95:
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.y;
	mul.lo.s32 	%r10, %r8, %r9;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r12, %r10, %r11;
	mov.u32 	%r13, %ntid.x;
	mov.u32 	%r14, %ctaid.x;
	mul.lo.s32 	%r15, %r13, %r14;
	add.s32 	%r16, %r12, %r15;
	mov.u32 	%r17, %tid.x;
	add.s32 	%r1, %r16, %r17;
tmp96:
	.loc	1 81 1
	mov.u64 	%rd5, D_OUTPUT_UNITS;
	cvta.const.u64 	%rd6, %rd5;
	ld.u32 	%r18, [%rd6];
	setp.lt.s32	%p1, %r1, %r18;
	not.pred 	%p2, %p1;
	@%p2 bra 	BB18_6;
	bra.uni 	BB18_1;

BB18_1:
	.loc	1 84 1
tmp97:
	mov.u64 	%rd7, D_HIDDEN_UNITS;
	cvta.const.u64 	%rd8, %rd7;
	ld.u32 	%r19, [%rd8];
	mul.lo.s32 	%r24, %r1, %r19;
tmp98:
	mov.f32 	%f4, 0f00000000;
	.loc	1 86 1
	mov.f32 	%f10, %f4;
tmp99:
	mov.u32 	%r20, 0;
	.loc	1 87 1
tmp100:
	mov.b32 	%r25, %r20;
tmp101:

BB18_2:
	.loc	1 87 1
	mov.u64 	%rd9, D_HIDDEN_UNITS;
	cvta.const.u64 	%rd10, %rd9;
	ld.u32 	%r21, [%rd10];
	setp.lt.s32	%p3, %r25, %r21;
	not.pred 	%p4, %p3;
	@%p4 bra 	BB18_5;
	bra.uni 	BB18_3;

BB18_3:
	.loc	1 89 1
tmp102:
	cvt.s64.s32	%rd19, %r24;
	shl.b64 	%rd20, %rd19, 2;
	add.s64 	%rd21, %rd4, %rd20;
	ld.f32 	%f7, [%rd21];
	cvt.s64.s32	%rd22, %r25;
	shl.b64 	%rd23, %rd22, 2;
	add.s64 	%rd24, %rd1, %rd23;
	ld.f32 	%f8, [%rd24];
	mul.f32 	%f9, %f7, %f8;
	add.f32 	%f10, %f10, %f9;
tmp103:
	.loc	1 90 1
	add.s32 	%r24, %r24, 1;
tmp104:

	.loc	1 87 30
	add.s32 	%r25, %r25, 1;
tmp105:
	bra.uni 	BB18_2;
tmp106:

BB18_5:
	.loc	1 93 1
	mov.u64 	%rd11, D_ACTIVATION_FUNCTION;
	cvta.const.u64 	%rd12, %rd11;
	ld.u32 	%r22, [%rd12];
	.loc	1 93 68
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r22;
	.param .b32 param1;
	st.param.f32	[param1+0], %f10;
	.param .b32 retval0;
	call.uni (retval0), 
	Evaluate, 
	(
	param0, 
	param1
	);
	ld.param.f32	%f5, [retval0+0];
	
	//{
	}// Callseq End 21
	cvt.s64.s32	%rd13, %r1;
	shl.b64 	%rd14, %rd13, 2;
	add.s64 	%rd15, %rd2, %rd14;
	st.f32 	[%rd15], %f5;
	.loc	1 95 1
	ld.u32 	%r23, [%rd12];
	.loc	1 95 78
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r23;
	.param .b32 param1;
	st.param.f32	[param1+0], %f10;
	.param .b32 retval0;
	call.uni (retval0), 
	EvaluateDerivative, 
	(
	param0, 
	param1
	);
	ld.param.f32	%f6, [retval0+0];
	
	//{
	}// Callseq End 22
	cvt.s64.s32	%rd16, %r1;
	shl.b64 	%rd17, %rd16, 2;
	add.s64 	%rd18, %rd3, %rd17;
	st.f32 	[%rd18], %f6;
tmp107:

BB18_6:
	.loc	1 97 2
	ret;
tmp108:
func_end18:
}

	.file	1 "C:/Users/Alka/Documents/GitHub/ClockworkNNModule/Cuda/CWFeedForwardKernel.cu", 1445245164, 2876
	.file	2 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp", 1424261298, 140584
	.file	3 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp", 1424261299, 98411
	.file	4 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h", 1379531880, 44558
	.file	5 "C:\\Users\\Alka\\Disk Google\\fel\\SummerCamp\\BrainSimulator-master\\Sources\\Modules\\BasicNodes\\Cuda\\NeuralNetwork\\Activation/ActivationFunction.cu", 1436342890, 2607

.section .debug_info {
 .b32 4469
 .b8 2
 .b8 0
 .b32 .debug_abbrev
 .b8 8
 .b8 1

 .b8 108
 .b8 103
 .b8 101
 .b8 110
 .b8 102
 .b8 101
 .b8 58
 .b8 32
 .b8 69
 .b8 68
 .b8 71
 .b8 32
 .b8 52
 .b8 46
 .b8 57

 .b8 0
 .b8 4
 .b8 67
 .b8 58
 .b8 47
 .b8 85
 .b8 115
 .b8 101
 .b8 114
 .b8 115
 .b8 47
 .b8 65
 .b8 108
 .b8 107
 .b8 97
 .b8 47
 .b8 68
 .b8 111
 .b8 99
 .b8 117
 .b8 109
 .b8 101
 .b8 110
 .b8 116
 .b8 115
 .b8 47
 .b8 71
 .b8 105
 .b8 116
 .b8 72
 .b8 117
 .b8 98
 .b8 47
 .b8 67
 .b8 108
 .b8 111
 .b8 99
 .b8 107
 .b8 119
 .b8 111
 .b8 114
 .b8 107
 .b8 78
 .b8 78
 .b8 77
 .b8 111
 .b8 100
 .b8 117
 .b8 108
 .b8 101
 .b8 47
 .b8 67
 .b8 117
 .b8 100
 .b8 97
 .b8 47
 .b8 67
 .b8 87
 .b8 70
 .b8 101
 .b8 101
 .b8 100
 .b8 70
 .b8 111
 .b8 114
 .b8 119
 .b8 97
 .b8 114
 .b8 100
 .b8 75
 .b8 101
 .b8 114
 .b8 110
 .b8 101
 .b8 108
 .b8 46
 .b8 99
 .b8 117

 .b8 0
 .b64 0
 .b32 .debug_line
 .b8 67
 .b8 58
 .b8 92
 .b8 85
 .b8 115
 .b8 101
 .b8 114
 .b8 115
 .b8 92
 .b8 65
 .b8 108
 .b8 107
 .b8 97
 .b8 92
 .b8 68
 .b8 111
 .b8 99
 .b8 117
 .b8 109
 .b8 101
 .b8 110
 .b8 116
 .b8 115
 .b8 92
 .b8 71
 .b8 105
 .b8 116
 .b8 72
 .b8 117
 .b8 98
 .b8 92
 .b8 67
 .b8 108
 .b8 111
 .b8 99
 .b8 107
 .b8 119
 .b8 111
 .b8 114
 .b8 107
 .b8 78
 .b8 78
 .b8 77
 .b8 111
 .b8 100
 .b8 117
 .b8 108
 .b8 101
 .b8 92
 .b8 67
 .b8 117
 .b8 100
 .b8 97

 .b8 0
 .b8 2

 .b8 68
 .b8 95
 .b8 73
 .b8 78
 .b8 80
 .b8 85
 .b8 84
 .b8 95
 .b8 85
 .b8 78
 .b8 73
 .b8 84
 .b8 83

 .b8 0
 .b32 224
 .b32 1
 .b32 17
 .b8 9
 .b8 3
 .b64 D_INPUT_UNITS
 .b8 68
 .b8 95
 .b8 73
 .b8 78
 .b8 80
 .b8 85
 .b8 84
 .b8 95
 .b8 85
 .b8 78
 .b8 73
 .b8 84
 .b8 83

 .b8 0
 .b8 4
 .b8 3

 .b8 105
 .b8 110
 .b8 116

 .b8 0
 .b8 5
 .b32 4
 .b8 2

 .b8 68
 .b8 95
 .b8 72
 .b8 73
 .b8 68
 .b8 68
 .b8 69
 .b8 78
 .b8 95
 .b8 85
 .b8 78
 .b8 73
 .b8 84
 .b8 83

 .b8 0
 .b32 224
 .b32 1
 .b32 18
 .b8 9
 .b8 3
 .b64 D_HIDDEN_UNITS
 .b8 68
 .b8 95
 .b8 72
 .b8 73
 .b8 68
 .b8 68
 .b8 69
 .b8 78
 .b8 95
 .b8 85
 .b8 78
 .b8 73
 .b8 84
 .b8 83

 .b8 0
 .b8 4
 .b8 2

 .b8 68
 .b8 95
 .b8 79
 .b8 85
 .b8 84
 .b8 80
 .b8 85
 .b8 84
 .b8 95
 .b8 85
 .b8 78
 .b8 73
 .b8 84
 .b8 83

 .b8 0
 .b32 224
 .b32 1
 .b32 19
 .b8 9
 .b8 3
 .b64 D_OUTPUT_UNITS
 .b8 68
 .b8 95
 .b8 79
 .b8 85
 .b8 84
 .b8 80
 .b8 85
 .b8 84
 .b8 95
 .b8 85
 .b8 78
 .b8 73
 .b8 84
 .b8 83

 .b8 0
 .b8 4
 .b8 2

 .b8 68
 .b8 95
 .b8 78
 .b8 69
 .b8 85
 .b8 82
 .b8 79
 .b8 78
 .b8 83
 .b8 95
 .b8 80
 .b8 69
 .b8 82
 .b8 95
 .b8 71
 .b8 82
 .b8 79
 .b8 85
 .b8 80

 .b8 0
 .b32 224
 .b32 1
 .b32 20
 .b8 9
 .b8 3
 .b64 D_NEURONS_PER_GROUP
 .b8 68
 .b8 95
 .b8 78
 .b8 69
 .b8 85
 .b8 82
 .b8 79
 .b8 78
 .b8 83
 .b8 95
 .b8 80
 .b8 69
 .b8 82
 .b8 95
 .b8 71
 .b8 82
 .b8 79
 .b8 85
 .b8 80

 .b8 0
 .b8 4
 .b8 2

 .b8 68
 .b8 95
 .b8 78
 .b8 69
 .b8 85
 .b8 82
 .b8 79
 .b8 78
 .b8 95
 .b8 71
 .b8 82
 .b8 79
 .b8 85
 .b8 80
 .b8 83

 .b8 0
 .b32 224
 .b32 1
 .b32 21
 .b8 9
 .b8 3
 .b64 D_NEURON_GROUPS
 .b8 68
 .b8 95
 .b8 78
 .b8 69
 .b8 85
 .b8 82
 .b8 79
 .b8 78
 .b8 95
 .b8 71
 .b8 82
 .b8 79
 .b8 85
 .b8 80
 .b8 83

 .b8 0
 .b8 4
 .b8 2

 .b8 68
 .b8 95
 .b8 65
 .b8 67
 .b8 84
 .b8 73
 .b8 86
 .b8 65
 .b8 84
 .b8 73
 .b8 79
 .b8 78
 .b8 95
 .b8 70
 .b8 85
 .b8 78
 .b8 67
 .b8 84
 .b8 73
 .b8 79
 .b8 78

 .b8 0
 .b32 530
 .b32 1
 .b32 22
 .b8 9
 .b8 3
 .b64 D_ACTIVATION_FUNCTION
 .b8 68
 .b8 95
 .b8 65
 .b8 67
 .b8 84
 .b8 73
 .b8 86
 .b8 65
 .b8 84
 .b8 73
 .b8 79
 .b8 78
 .b8 95
 .b8 70
 .b8 85
 .b8 78
 .b8 67
 .b8 84
 .b8 73
 .b8 79
 .b8 78

 .b8 0
 .b8 4
 .b8 3

 .b8 117
 .b8 110
 .b8 115
 .b8 105
 .b8 103
 .b8 110
 .b8 101
 .b8 100
 .b8 32
 .b8 105
 .b8 110
 .b8 116

 .b8 0
 .b8 7
 .b32 4
 .b8 4

 .b8 97
 .b8 99
 .b8 116
 .b8 105
 .b8 118
 .b8 101
 .b8 71
 .b8 114
 .b8 111
 .b8 117
 .b8 112
 .b8 115
 .b8 83
 .b8 104
 .b8 97
 .b8 114
 .b8 101
 .b8 100

 .b8 0
 .b32 612
 .b8 1
 .b32 1
 .b32 38
 .b8 9
 .b8 3
 .b64 activeGroupsShared
 .b8 97
 .b8 99
 .b8 116
 .b8 105
 .b8 118
 .b8 101
 .b8 71
 .b8 114
 .b8 111
 .b8 117
 .b8 112
 .b8 115
 .b8 83
 .b8 104
 .b8 97
 .b8 114
 .b8 101
 .b8 100

 .b8 0
 .b8 8
 .b8 5

 .b32 623
 .b8 6

 .b32 635
 .b8 0
 .b8 3

 .b8 102
 .b8 108
 .b8 111
 .b8 97
 .b8 116

 .b8 0
 .b8 4
 .b32 4
 .b8 7

 .b8 105
 .b8 110
 .b8 116

 .b8 0
 .b32 4
 .b8 5
 .b8 8

 .b8 115
 .b8 113
 .b8 114
 .b8 116
 .b8 102

 .b8 0
 .b8 115
 .b8 113
 .b8 114
 .b8 116
 .b8 102

 .b8 0
 .b32 2
 .b32 887
 .b32 623
 .b8 1
 .b8 9

 .b8 120

 .b8 0
 .b32 2
 .b32 887
 .b32 623
 .b8 0
 .b8 8

 .b8 102
 .b8 100
 .b8 105
 .b8 118
 .b8 105
 .b8 100
 .b8 101
 .b8 102

 .b8 0
 .b8 102
 .b8 100
 .b8 105
 .b8 118
 .b8 105
 .b8 100
 .b8 101
 .b8 102

 .b8 0
 .b32 2
 .b32 1437
 .b32 623
 .b8 1
 .b8 9

 .b8 97

 .b8 0
 .b32 2
 .b32 1437
 .b32 623
 .b8 9

 .b8 98

 .b8 0
 .b32 2
 .b32 1437
 .b32 623
 .b8 0
 .b8 8

 .b8 101
 .b8 120
 .b8 112
 .b8 102

 .b8 0
 .b8 101
 .b8 120
 .b8 112
 .b8 102

 .b8 0
 .b32 3
 .b32 1078
 .b32 623
 .b8 1
 .b8 9

 .b8 97

 .b8 0
 .b32 3
 .b32 1078
 .b32 623
 .b8 0
 .b8 8

 .b8 116
 .b8 97
 .b8 110
 .b8 104
 .b8 102

 .b8 0
 .b8 116
 .b8 97
 .b8 110
 .b8 104
 .b8 102

 .b8 0
 .b32 3
 .b32 1106
 .b32 623
 .b8 1
 .b8 9

 .b8 97

 .b8 0
 .b32 3
 .b32 1106
 .b32 623
 .b8 0
 .b8 10

 .b8 95
 .b8 90
 .b8 51
 .b8 112
 .b8 111
 .b8 119
 .b8 102
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 51
 .b8 112
 .b8 111
 .b8 119
 .b8 102
 .b8 105

 .b8 0
 .b32 4
 .b32 1117
 .b32 623
 .b8 1
 .b64 func_begin0
 .b64 func_end0
 .b8 1
 .b8 156
 .b8 11

 .b8 95
 .b8 88

 .b8 0
 .b32 4
 .b32 1117
 .b32 623
 .b8 5
 .b8 144
 .b8 177
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 11

 .b8 95
 .b8 89

 .b8 0
 .b32 4
 .b32 1117
 .b32 224
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 10

 .b8 95
 .b8 90
 .b8 56
 .b8 95
 .b8 80
 .b8 111
 .b8 119
 .b8 95
 .b8 105
 .b8 110
 .b8 116
 .b8 73
 .b8 102
 .b8 69
 .b8 84
 .b8 95
 .b8 83
 .b8 48
 .b8 95
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 56
 .b8 95
 .b8 80
 .b8 111
 .b8 119
 .b8 95
 .b8 105
 .b8 110
 .b8 116
 .b8 73
 .b8 102
 .b8 69
 .b8 84
 .b8 95
 .b8 83
 .b8 48
 .b8 95
 .b8 105

 .b8 0
 .b32 4
 .b32 1013
 .b32 623
 .b8 1
 .b64 func_begin1
 .b64 func_end1
 .b8 1
 .b8 156
 .b8 12

 .b8 95
 .b8 88

 .b8 0
 .b32 4
 .b32 1013
 .b32 623
 .b32 .debug_loc
 .b8 11

 .b8 95
 .b8 89

 .b8 0
 .b32 4
 .b32 1013
 .b32 224
 .b8 5
 .b8 144
 .b8 182
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 13

 .b64 tmp2
 .b64 tmp17
 .b8 13

 .b64 tmp2
 .b64 tmp17
 .b8 13

 .b64 tmp2
 .b64 tmp17
 .b8 14

 .b8 95
 .b8 78

 .b8 0
 .b32 4
 .b32 1014
 .b32 530
 .b32 .debug_loc+88
 .b8 13

 .b64 tmp7
 .b64 tmp17
 .b8 14

 .b8 95
 .b8 90

 .b8 0
 .b32 4
 .b32 1019
 .b32 623
 .b32 .debug_loc+219
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 10

 .b8 95
 .b8 90
 .b8 52
 .b8 115
 .b8 113
 .b8 114
 .b8 116
 .b8 102

 .b8 0
 .b8 95
 .b8 90
 .b8 52
 .b8 115
 .b8 113
 .b8 114
 .b8 116
 .b8 102

 .b8 0
 .b32 4
 .b32 1135
 .b32 623
 .b8 1
 .b64 func_begin2
 .b64 func_end2
 .b8 1
 .b8 156
 .b8 11

 .b8 95
 .b8 88

 .b8 0
 .b32 4
 .b32 1135
 .b32 623
 .b8 5
 .b8 144
 .b8 177
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 13

 .b64 tmp19
 .b64 tmp21
 .b8 13

 .b64 tmp19
 .b64 tmp21
 .b8 13

 .b64 tmp19
 .b64 tmp21
 .b8 15

 .b32 645
 .b64 tmp19
 .b64 tmp20
 .b32 4
 .b32 1136
 .b8 16

 .b32 671
 .b8 5
 .b8 144
 .b8 178
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 10

 .b8 115
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100

 .b8 0
 .b8 115
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100

 .b8 0
 .b32 5
 .b32 26
 .b32 623
 .b8 1
 .b64 func_begin3
 .b64 func_end3
 .b8 1
 .b8 156
 .b8 11

 .b8 120

 .b8 0
 .b32 5
 .b32 26
 .b32 623
 .b8 5
 .b8 144
 .b8 182
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 13

 .b64 tmp22
 .b64 tmp26
 .b8 13

 .b64 tmp22
 .b64 tmp26
 .b8 13

 .b64 tmp22
 .b64 tmp26
 .b8 15

 .b32 750
 .b64 tmp24
 .b64 tmp25
 .b32 5
 .b32 28
 .b8 16

 .b32 774
 .b8 5
 .b8 144
 .b8 177
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 10

 .b8 115
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101

 .b8 0
 .b8 115
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101

 .b8 0
 .b32 5
 .b32 30
 .b32 623
 .b8 1
 .b64 func_begin4
 .b64 func_end4
 .b8 1
 .b8 156
 .b8 11

 .b8 120

 .b8 0
 .b32 5
 .b32 30
 .b32 623
 .b8 5
 .b8 144
 .b8 177
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 10

 .b8 116
 .b8 97
 .b8 110
 .b8 104
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101

 .b8 0
 .b8 116
 .b8 97
 .b8 110
 .b8 104
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101

 .b8 0
 .b32 5
 .b32 37
 .b32 623
 .b8 1
 .b64 func_begin5
 .b64 func_end5
 .b8 1
 .b8 156
 .b8 11

 .b8 120

 .b8 0
 .b32 5
 .b32 37
 .b32 623
 .b8 6
 .b8 144
 .b8 176
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b8 2
 .b8 13

 .b64 tmp30
 .b64 tmp33
 .b8 13

 .b64 tmp30
 .b64 tmp33
 .b8 13

 .b64 tmp30
 .b64 tmp33
 .b8 17

 .b8 118
 .b8 97
 .b8 108

 .b8 0
 .b32 5
 .b32 39
 .b32 623
 .b8 6
 .b8 144
 .b8 181
 .b8 230
 .b8 152
 .b8 171
 .b8 2
 .b8 2
 .b8 15

 .b32 790
 .b64 tmp30
 .b64 tmp31
 .b32 5
 .b32 39
 .b8 16

 .b32 816
 .b8 5
 .b8 144
 .b8 177
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 10

 .b8 105
 .b8 100
 .b8 101
 .b8 110
 .b8 116
 .b8 105
 .b8 116
 .b8 121

 .b8 0
 .b8 105
 .b8 100
 .b8 101
 .b8 110
 .b8 116
 .b8 105
 .b8 116
 .b8 121

 .b8 0
 .b32 5
 .b32 43
 .b32 623
 .b8 1
 .b64 func_begin6
 .b64 func_end6
 .b8 1
 .b8 156
 .b8 11

 .b8 120

 .b8 0
 .b32 5
 .b32 43
 .b32 623
 .b8 5
 .b8 144
 .b8 177
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 10

 .b8 105
 .b8 100
 .b8 101
 .b8 110
 .b8 116
 .b8 105
 .b8 116
 .b8 121
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101

 .b8 0
 .b8 105
 .b8 100
 .b8 101
 .b8 110
 .b8 116
 .b8 105
 .b8 116
 .b8 121
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101

 .b8 0
 .b32 5
 .b32 47
 .b32 623
 .b8 1
 .b64 func_begin7
 .b64 func_end7
 .b8 1
 .b8 156
 .b8 11

 .b8 120

 .b8 0
 .b32 5
 .b32 47
 .b32 623
 .b8 11
 .b8 3
 .b64 __local_depot7
 .b8 35
 .b8 0

 .b8 6
 .b8 0
 .b8 10

 .b8 103
 .b8 97
 .b8 117
 .b8 115
 .b8 115
 .b8 105
 .b8 97
 .b8 110

 .b8 0
 .b8 103
 .b8 97
 .b8 117
 .b8 115
 .b8 115
 .b8 105
 .b8 97
 .b8 110

 .b8 0
 .b32 5
 .b32 52
 .b32 623
 .b8 1
 .b64 func_begin8
 .b64 func_end8
 .b8 1
 .b8 156
 .b8 11

 .b8 120

 .b8 0
 .b32 5
 .b32 52
 .b32 623
 .b8 5
 .b8 144
 .b8 182
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 13

 .b64 tmp38
 .b64 tmp42
 .b8 13

 .b64 tmp38
 .b64 tmp42
 .b8 13

 .b64 tmp38
 .b64 tmp42
 .b8 15

 .b32 750
 .b64 tmp40
 .b64 tmp41
 .b32 5
 .b32 54
 .b8 11

 .b8 97

 .b8 0
 .b32 3
 .b32 1078
 .b32 623
 .b8 5
 .b8 144
 .b8 177
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 10

 .b8 103
 .b8 97
 .b8 117
 .b8 115
 .b8 115
 .b8 105
 .b8 97
 .b8 110
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101

 .b8 0
 .b8 103
 .b8 97
 .b8 117
 .b8 115
 .b8 115
 .b8 105
 .b8 97
 .b8 110
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101

 .b8 0
 .b32 5
 .b32 56
 .b32 623
 .b8 1
 .b64 func_begin9
 .b64 func_end9
 .b8 1
 .b8 156
 .b8 11

 .b8 120

 .b8 0
 .b32 5
 .b32 56
 .b32 623
 .b8 5
 .b8 144
 .b8 177
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 10

 .b8 114
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 97
 .b8 108
 .b8 115
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100

 .b8 0
 .b8 114
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 97
 .b8 108
 .b8 115
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100

 .b8 0
 .b32 5
 .b32 61
 .b32 623
 .b8 1
 .b64 func_begin10
 .b64 func_end10
 .b8 1
 .b8 156
 .b8 11

 .b8 120

 .b8 0
 .b32 5
 .b32 61
 .b32 623
 .b8 5
 .b8 144
 .b8 177
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 13

 .b64 tmp45
 .b64 tmp49
 .b8 13

 .b64 tmp45
 .b64 tmp49
 .b8 13

 .b64 tmp45
 .b64 tmp49
 .b8 15

 .b32 687
 .b64 tmp47
 .b64 tmp48
 .b32 5
 .b32 63
 .b8 16

 .b32 719
 .b8 5
 .b8 144
 .b8 178
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 16

 .b32 734
 .b8 5
 .b8 144
 .b8 183
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 10

 .b8 114
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 97
 .b8 108
 .b8 115
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101

 .b8 0
 .b8 114
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 97
 .b8 108
 .b8 115
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101

 .b8 0
 .b32 5
 .b32 65
 .b32 623
 .b8 1
 .b64 func_begin11
 .b64 func_end11
 .b8 1
 .b8 156
 .b8 11

 .b8 120

 .b8 0
 .b32 5
 .b32 65
 .b32 623
 .b8 5
 .b8 144
 .b8 177
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 13

 .b64 tmp50
 .b64 tmp52
 .b8 13

 .b64 tmp50
 .b64 tmp52
 .b8 13

 .b64 tmp50
 .b64 tmp52
 .b8 17

 .b8 118
 .b8 97
 .b8 108

 .b8 0
 .b32 5
 .b32 67
 .b32 623
 .b8 5
 .b8 144
 .b8 180
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 10

 .b8 114
 .b8 101
 .b8 99
 .b8 116
 .b8 105
 .b8 102
 .b8 105
 .b8 101
 .b8 100
 .b8 76
 .b8 105
 .b8 110
 .b8 101
 .b8 97
 .b8 114
 .b8 85
 .b8 110
 .b8 105
 .b8 116

 .b8 0
 .b8 114
 .b8 101
 .b8 99
 .b8 116
 .b8 105
 .b8 102
 .b8 105
 .b8 101
 .b8 100
 .b8 76
 .b8 105
 .b8 110
 .b8 101
 .b8 97
 .b8 114
 .b8 85
 .b8 110
 .b8 105
 .b8 116

 .b8 0
 .b32 5
 .b32 71
 .b32 623
 .b8 1
 .b64 func_begin12
 .b64 func_end12
 .b8 1
 .b8 156
 .b8 11

 .b8 120

 .b8 0
 .b32 5
 .b32 71
 .b32 623
 .b8 5
 .b8 144
 .b8 180
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 10

 .b8 114
 .b8 101
 .b8 99
 .b8 116
 .b8 105
 .b8 102
 .b8 105
 .b8 101
 .b8 100
 .b8 76
 .b8 105
 .b8 110
 .b8 101
 .b8 97
 .b8 114
 .b8 85
 .b8 110
 .b8 105
 .b8 116
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101

 .b8 0
 .b8 114
 .b8 101
 .b8 99
 .b8 116
 .b8 105
 .b8 102
 .b8 105
 .b8 101
 .b8 100
 .b8 76
 .b8 105
 .b8 110
 .b8 101
 .b8 97
 .b8 114
 .b8 85
 .b8 110
 .b8 105
 .b8 116
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101

 .b8 0
 .b32 5
 .b32 78
 .b32 623
 .b8 1
 .b64 func_begin13
 .b64 func_end13
 .b8 1
 .b8 156
 .b8 11

 .b8 120

 .b8 0
 .b32 5
 .b32 78
 .b32 623
 .b8 5
 .b8 144
 .b8 177
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 10

 .b8 82
 .b8 66
 .b8 77
 .b8 98
 .b8 105
 .b8 110
 .b8 97
 .b8 114
 .b8 121

 .b8 0
 .b8 82
 .b8 66
 .b8 77
 .b8 98
 .b8 105
 .b8 110
 .b8 97
 .b8 114
 .b8 121

 .b8 0
 .b32 5
 .b32 83
 .b32 623
 .b8 1
 .b64 func_begin14
 .b64 func_end14
 .b8 1
 .b8 156
 .b8 11

 .b8 120

 .b8 0
 .b32 5
 .b32 83
 .b32 623
 .b8 5
 .b8 144
 .b8 177
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 11

 .b8 114
 .b8 97
 .b8 110
 .b8 100
 .b8 111
 .b8 109

 .b8 0
 .b32 5
 .b32 83
 .b32 623
 .b8 5
 .b8 144
 .b8 178
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 10

 .b8 69
 .b8 118
 .b8 97
 .b8 108
 .b8 117
 .b8 97
 .b8 116
 .b8 101

 .b8 0
 .b8 69
 .b8 118
 .b8 97
 .b8 108
 .b8 117
 .b8 97
 .b8 116
 .b8 101

 .b8 0
 .b32 5
 .b32 89
 .b32 623
 .b8 1
 .b64 func_begin15
 .b64 func_end15
 .b8 1
 .b8 156
 .b8 11

 .b8 97
 .b8 99
 .b8 116
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 70
 .b8 117
 .b8 110
 .b8 99
 .b8 116
 .b8 105
 .b8 111
 .b8 110

 .b8 0
 .b32 5
 .b32 89
 .b32 530
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 11

 .b8 105
 .b8 110
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 5
 .b32 89
 .b32 623
 .b8 6
 .b8 144
 .b8 185
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b8 2
 .b8 13

 .b64 tmp61
 .b64 tmp66
 .b8 13

 .b64 tmp61
 .b64 tmp66
 .b8 13

 .b64 tmp61
 .b64 tmp66
 .b8 13

 .b64 tmp61
 .b64 tmp66
 .b8 13

 .b64 tmp62
 .b64 tmp66
 .b8 15

 .b32 790
 .b64 tmp64
 .b64 tmp65
 .b32 5
 .b32 109
 .b8 11

 .b8 97

 .b8 0
 .b32 3
 .b32 1106
 .b32 623
 .b8 5
 .b8 144
 .b8 182
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 10

 .b8 69
 .b8 118
 .b8 97
 .b8 108
 .b8 117
 .b8 97
 .b8 116
 .b8 101
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101

 .b8 0
 .b8 69
 .b8 118
 .b8 97
 .b8 108
 .b8 117
 .b8 97
 .b8 116
 .b8 101
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101

 .b8 0
 .b32 5
 .b32 119
 .b32 623
 .b8 1
 .b64 func_begin16
 .b64 func_end16
 .b8 1
 .b8 156
 .b8 11

 .b8 97
 .b8 99
 .b8 116
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 70
 .b8 117
 .b8 110
 .b8 99
 .b8 116
 .b8 105
 .b8 111
 .b8 110

 .b8 0
 .b32 5
 .b32 119
 .b32 530
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 11

 .b8 105
 .b8 110
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 5
 .b32 119
 .b32 623
 .b8 6
 .b8 144
 .b8 176
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b8 2
 .b8 0
 .b8 10

 .b8 67
 .b8 87
 .b8 70
 .b8 101
 .b8 101
 .b8 100
 .b8 102
 .b8 111
 .b8 114
 .b8 119
 .b8 97
 .b8 114
 .b8 100
 .b8 72
 .b8 105
 .b8 100
 .b8 100
 .b8 101
 .b8 110
 .b8 75
 .b8 101
 .b8 114
 .b8 110
 .b8 101
 .b8 108

 .b8 0
 .b8 67
 .b8 87
 .b8 70
 .b8 101
 .b8 101
 .b8 100
 .b8 102
 .b8 111
 .b8 114
 .b8 119
 .b8 97
 .b8 114
 .b8 100
 .b8 72
 .b8 105
 .b8 100
 .b8 100
 .b8 101
 .b8 110
 .b8 75
 .b8 101
 .b8 114
 .b8 110
 .b8 101
 .b8 108

 .b8 0
 .b32 1
 .b32 24
 .b32 3986
 .b8 1
 .b64 func_begin17
 .b64 func_end17
 .b8 1
 .b8 156
 .b8 11

 .b8 105
 .b8 110
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 25
 .b32 4460
 .b8 9
 .b8 3
 .b64 CWFeedforwardHiddenKernel_param_0
 .b8 7
 .b8 11

 .b8 104
 .b8 105
 .b8 100
 .b8 100
 .b8 101
 .b8 110
 .b8 65
 .b8 99
 .b8 116
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 26
 .b32 4460
 .b8 9
 .b8 3
 .b64 CWFeedforwardHiddenKernel_param_1
 .b8 7
 .b8 11

 .b8 112
 .b8 114
 .b8 101
 .b8 118
 .b8 105
 .b8 111
 .b8 117
 .b8 115
 .b8 72
 .b8 105
 .b8 100
 .b8 100
 .b8 101
 .b8 110
 .b8 65
 .b8 99
 .b8 116
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 27
 .b32 4460
 .b8 9
 .b8 3
 .b64 CWFeedforwardHiddenKernel_param_2
 .b8 7
 .b8 11

 .b8 104
 .b8 105
 .b8 100
 .b8 100
 .b8 101
 .b8 110
 .b8 65
 .b8 99
 .b8 116
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101
 .b8 115

 .b8 0
 .b32 1
 .b32 28
 .b32 4460
 .b8 9
 .b8 3
 .b64 CWFeedforwardHiddenKernel_param_3
 .b8 7
 .b8 11

 .b8 105
 .b8 110
 .b8 112
 .b8 117
 .b8 116
 .b8 87
 .b8 101
 .b8 105
 .b8 103
 .b8 104
 .b8 116
 .b8 115

 .b8 0
 .b32 1
 .b32 29
 .b32 4460
 .b8 9
 .b8 3
 .b64 CWFeedforwardHiddenKernel_param_4
 .b8 7
 .b8 11

 .b8 114
 .b8 101
 .b8 99
 .b8 117
 .b8 114
 .b8 114
 .b8 101
 .b8 110
 .b8 116
 .b8 87
 .b8 101
 .b8 105
 .b8 103
 .b8 104
 .b8 116
 .b8 115

 .b8 0
 .b32 1
 .b32 30
 .b32 4460
 .b8 9
 .b8 3
 .b64 CWFeedforwardHiddenKernel_param_5
 .b8 7
 .b8 11

 .b8 97
 .b8 99
 .b8 116
 .b8 105
 .b8 118
 .b8 101
 .b8 71
 .b8 114
 .b8 111
 .b8 117
 .b8 112
 .b8 115

 .b8 0
 .b32 1
 .b32 31
 .b32 4466
 .b8 9
 .b8 3
 .b64 CWFeedforwardHiddenKernel_param_6
 .b8 7
 .b8 13

 .b64 tmp70
 .b64 tmp94
 .b8 13

 .b64 tmp70
 .b64 tmp93
 .b8 13

 .b64 tmp70
 .b64 tmp93
 .b8 17

 .b8 117
 .b8 110
 .b8 105
 .b8 116
 .b8 73
 .b8 100

 .b8 0
 .b32 1
 .b32 34
 .b32 224
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 17

 .b8 103
 .b8 114
 .b8 111
 .b8 117
 .b8 112
 .b8 73
 .b8 68

 .b8 0
 .b32 1
 .b32 46
 .b32 224
 .b8 5
 .b8 144
 .b8 178
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 13

 .b64 tmp74
 .b64 tmp93
 .b8 13

 .b64 tmp75
 .b64 tmp93
 .b8 14

 .b8 119
 .b8 101
 .b8 105
 .b8 103
 .b8 104
 .b8 116
 .b8 73
 .b8 100

 .b8 0
 .b32 1
 .b32 50
 .b32 224
 .b32 .debug_loc+331
 .b8 14

 .b8 119
 .b8 101
 .b8 105
 .b8 103
 .b8 104
 .b8 116
 .b8 101
 .b8 100
 .b8 83
 .b8 117
 .b8 109

 .b8 0
 .b32 1
 .b32 52
 .b32 623
 .b32 .debug_loc+491
 .b8 13

 .b64 tmp78
 .b64 tmp84
 .b8 14

 .b8 105

 .b8 0
 .b32 1
 .b32 53
 .b32 224
 .b32 .debug_loc+627
 .b8 0
 .b8 13

 .b64 tmp86
 .b64 tmp92
 .b8 14

 .b8 105

 .b8 0
 .b32 1
 .b32 61
 .b32 224
 .b32 .debug_loc+715
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 18

 .b8 118
 .b8 111
 .b8 105
 .b8 100

 .b8 0
 .b8 10

 .b8 67
 .b8 87
 .b8 70
 .b8 101
 .b8 101
 .b8 100
 .b8 102
 .b8 111
 .b8 114
 .b8 119
 .b8 97
 .b8 114
 .b8 100
 .b8 79
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116
 .b8 75
 .b8 101
 .b8 114
 .b8 110
 .b8 101
 .b8 108

 .b8 0
 .b8 67
 .b8 87
 .b8 70
 .b8 101
 .b8 101
 .b8 100
 .b8 102
 .b8 111
 .b8 114
 .b8 119
 .b8 97
 .b8 114
 .b8 100
 .b8 79
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116
 .b8 75
 .b8 101
 .b8 114
 .b8 110
 .b8 101
 .b8 108

 .b8 0
 .b32 1
 .b32 75
 .b32 3986
 .b8 1
 .b64 func_begin18
 .b64 func_end18
 .b8 1
 .b8 156
 .b8 11

 .b8 104
 .b8 105
 .b8 100
 .b8 100
 .b8 101
 .b8 110
 .b8 65
 .b8 99
 .b8 116
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 75
 .b32 4460
 .b8 9
 .b8 3
 .b64 CWFeedforwardOutputKernel_param_0
 .b8 7
 .b8 11

 .b8 111
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116
 .b8 65
 .b8 99
 .b8 116
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 75
 .b32 4460
 .b8 9
 .b8 3
 .b64 CWFeedforwardOutputKernel_param_1
 .b8 7
 .b8 11

 .b8 111
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116
 .b8 65
 .b8 99
 .b8 116
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101
 .b8 115

 .b8 0
 .b32 1
 .b32 75
 .b32 4460
 .b8 9
 .b8 3
 .b64 CWFeedforwardOutputKernel_param_2
 .b8 7
 .b8 11

 .b8 111
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116
 .b8 87
 .b8 101
 .b8 105
 .b8 103
 .b8 104
 .b8 116
 .b8 115

 .b8 0
 .b32 1
 .b32 75
 .b32 4460
 .b8 9
 .b8 3
 .b64 CWFeedforwardOutputKernel_param_3
 .b8 7
 .b8 13

 .b64 tmp95
 .b64 tmp108
 .b8 13

 .b64 tmp95
 .b64 tmp107
 .b8 13

 .b64 tmp95
 .b64 tmp107
 .b8 17

 .b8 117
 .b8 110
 .b8 105
 .b8 116
 .b8 73
 .b8 100

 .b8 0
 .b32 1
 .b32 77
 .b32 224
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 13

 .b64 tmp96
 .b64 tmp107
 .b8 13

 .b64 tmp97
 .b64 tmp107
 .b8 14

 .b8 119
 .b8 101
 .b8 105
 .b8 103
 .b8 104
 .b8 116
 .b8 73
 .b8 100

 .b8 0
 .b32 1
 .b32 84
 .b32 224
 .b32 .debug_loc+803
 .b8 14

 .b8 119
 .b8 101
 .b8 105
 .b8 103
 .b8 104
 .b8 116
 .b8 101
 .b8 100
 .b8 83
 .b8 117
 .b8 109

 .b8 0
 .b32 1
 .b32 86
 .b32 623
 .b32 .debug_loc+891
 .b8 13

 .b64 tmp100
 .b64 tmp106
 .b8 14

 .b8 105

 .b8 0
 .b32 1
 .b32 87
 .b32 224
 .b32 .debug_loc+979
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 19

 .b32 623
 .b8 12
 .b8 19

 .b32 224
 .b8 12
 .b8 0
}
.section .debug_abbrev {
 .b8 1

 .b8 17

 .b8 1

 .b8 37

 .b8 8

 .b8 19

 .b8 11

 .b8 3

 .b8 8

 .b8 17

 .b8 1

 .b8 16

 .b8 6

 .b8 27

 .b8 8

 .b8 0

 .b8 0

 .b8 2

 .b8 52

 .b8 0

 .b8 3

 .b8 8

 .b8 73

 .b8 19

 .b8 58

 .b8 6

 .b8 59

 .b8 6

 .b8 2

 .b8 10

 .b8 135
 .b8 64

 .b8 8

 .b8 51

 .b8 11

 .b8 0

 .b8 0

 .b8 3

 .b8 36

 .b8 0

 .b8 3

 .b8 8

 .b8 62

 .b8 11

 .b8 11

 .b8 6

 .b8 0

 .b8 0

 .b8 4

 .b8 52

 .b8 0

 .b8 3

 .b8 8

 .b8 73

 .b8 19

 .b8 63

 .b8 12

 .b8 58

 .b8 6

 .b8 59

 .b8 6

 .b8 2

 .b8 10

 .b8 135
 .b8 64

 .b8 8

 .b8 51

 .b8 11

 .b8 0

 .b8 0

 .b8 5

 .b8 1

 .b8 1

 .b8 73

 .b8 19

 .b8 0

 .b8 0

 .b8 6

 .b8 33

 .b8 0

 .b8 73

 .b8 19

 .b8 0

 .b8 0

 .b8 7

 .b8 36

 .b8 0

 .b8 3

 .b8 8

 .b8 11

 .b8 6

 .b8 62

 .b8 11

 .b8 0

 .b8 0

 .b8 8

 .b8 46

 .b8 1

 .b8 135
 .b8 64

 .b8 8

 .b8 3

 .b8 8

 .b8 58

 .b8 6

 .b8 59

 .b8 6

 .b8 73

 .b8 19

 .b8 32

 .b8 11

 .b8 0

 .b8 0

 .b8 9

 .b8 5

 .b8 0

 .b8 3

 .b8 8

 .b8 58

 .b8 6

 .b8 59

 .b8 6

 .b8 73

 .b8 19

 .b8 0

 .b8 0

 .b8 10

 .b8 46

 .b8 1

 .b8 135
 .b8 64

 .b8 8

 .b8 3

 .b8 8

 .b8 58

 .b8 6

 .b8 59

 .b8 6

 .b8 73

 .b8 19

 .b8 63

 .b8 12

 .b8 17

 .b8 1

 .b8 18

 .b8 1

 .b8 64

 .b8 10

 .b8 0

 .b8 0

 .b8 11

 .b8 5

 .b8 0

 .b8 3

 .b8 8

 .b8 58

 .b8 6

 .b8 59

 .b8 6

 .b8 73

 .b8 19

 .b8 2

 .b8 10

 .b8 51

 .b8 11

 .b8 0

 .b8 0

 .b8 12

 .b8 5

 .b8 0

 .b8 3

 .b8 8

 .b8 58

 .b8 6

 .b8 59

 .b8 6

 .b8 73

 .b8 19

 .b8 2

 .b8 6

 .b8 0

 .b8 0

 .b8 13

 .b8 11

 .b8 1

 .b8 17

 .b8 1

 .b8 18

 .b8 1

 .b8 0

 .b8 0

 .b8 14

 .b8 52

 .b8 0

 .b8 3

 .b8 8

 .b8 58

 .b8 6

 .b8 59

 .b8 6

 .b8 73

 .b8 19

 .b8 2

 .b8 6

 .b8 0

 .b8 0

 .b8 15

 .b8 29

 .b8 1

 .b8 49

 .b8 19

 .b8 17

 .b8 1

 .b8 18

 .b8 1

 .b8 88

 .b8 6

 .b8 89

 .b8 6

 .b8 0

 .b8 0

 .b8 16

 .b8 5

 .b8 0

 .b8 49

 .b8 19

 .b8 2

 .b8 10

 .b8 51

 .b8 11

 .b8 0

 .b8 0

 .b8 17

 .b8 52

 .b8 0

 .b8 3

 .b8 8

 .b8 58

 .b8 6

 .b8 59

 .b8 6

 .b8 73

 .b8 19

 .b8 2

 .b8 10

 .b8 51

 .b8 11

 .b8 0

 .b8 0

 .b8 18

 .b8 59

 .b8 0

 .b8 3

 .b8 8

 .b8 0

 .b8 0

 .b8 19

 .b8 15

 .b8 0

 .b8 73

 .b8 19

 .b8 51

 .b8 11

 .b8 0

 .b8 0

 .b8 0

}
.section .debug_loc {
 .b64 func_begin1
 .b64 tmp8
 .b8 6
 .b8 0
 .b8 144
 .b8 179
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 tmp8
 .b64 tmp16
 .b8 6
 .b8 0
 .b8 144
 .b8 179
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 tmp16
 .b64 func_end1
 .b8 6
 .b8 0
 .b8 144
 .b8 179
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 0
 .b64 0
 .b64 tmp4
 .b64 tmp6
 .b8 5
 .b8 0
 .b8 144
 .b8 184
 .b8 228
 .b8 149
 .b8 1
 .b64 tmp6
 .b64 tmp6
 .b8 5
 .b8 0
 .b8 144
 .b8 184
 .b8 228
 .b8 149
 .b8 1
 .b64 tmp6
 .b64 tmp8
 .b8 5
 .b8 0
 .b8 144
 .b8 184
 .b8 228
 .b8 149
 .b8 1
 .b64 tmp8
 .b64 tmp13
 .b8 5
 .b8 0
 .b8 144
 .b8 184
 .b8 228
 .b8 149
 .b8 1
 .b64 tmp13
 .b64 func_end1
 .b8 5
 .b8 0
 .b8 144
 .b8 184
 .b8 228
 .b8 149
 .b8 1
 .b64 0
 .b64 0
 .b64 tmp8
 .b64 tmp8
 .b8 6
 .b8 0
 .b8 144
 .b8 180
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 tmp8
 .b64 tmp12
 .b8 6
 .b8 0
 .b8 144
 .b8 180
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 tmp12
 .b64 tmp12
 .b8 6
 .b8 0
 .b8 144
 .b8 180
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 tmp12
 .b64 func_end1
 .b8 6
 .b8 0
 .b8 144
 .b8 180
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 0
 .b64 0
 .b64 tmp76
 .b64 tmp79
 .b8 6
 .b8 0
 .b8 144
 .b8 183
 .b8 230
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp79
 .b64 tmp82
 .b8 6
 .b8 0
 .b8 144
 .b8 183
 .b8 230
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp82
 .b64 tmp85
 .b8 6
 .b8 0
 .b8 144
 .b8 183
 .b8 230
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp85
 .b64 tmp87
 .b8 6
 .b8 0
 .b8 144
 .b8 185
 .b8 230
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp87
 .b64 tmp90
 .b8 6
 .b8 0
 .b8 144
 .b8 185
 .b8 230
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp90
 .b64 func_end17
 .b8 6
 .b8 0
 .b8 144
 .b8 185
 .b8 230
 .b8 200
 .b8 171
 .b8 2
 .b64 0
 .b64 0
 .b64 tmp77
 .b64 tmp79
 .b8 6
 .b8 0
 .b8 144
 .b8 183
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 tmp79
 .b64 tmp81
 .b8 6
 .b8 0
 .b8 144
 .b8 183
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 tmp81
 .b64 tmp87
 .b8 6
 .b8 0
 .b8 144
 .b8 183
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 tmp87
 .b64 tmp89
 .b8 6
 .b8 0
 .b8 144
 .b8 183
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 tmp89
 .b64 func_end17
 .b8 6
 .b8 0
 .b8 144
 .b8 183
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 0
 .b64 0
 .b64 tmp79
 .b64 tmp79
 .b8 6
 .b8 0
 .b8 144
 .b8 184
 .b8 230
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp79
 .b64 tmp83
 .b8 6
 .b8 0
 .b8 144
 .b8 184
 .b8 230
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp83
 .b64 func_end17
 .b8 6
 .b8 0
 .b8 144
 .b8 184
 .b8 230
 .b8 200
 .b8 171
 .b8 2
 .b64 0
 .b64 0
 .b64 tmp87
 .b64 tmp87
 .b8 6
 .b8 0
 .b8 144
 .b8 176
 .b8 232
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp87
 .b64 tmp91
 .b8 6
 .b8 0
 .b8 144
 .b8 176
 .b8 232
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp91
 .b64 func_end17
 .b8 6
 .b8 0
 .b8 144
 .b8 176
 .b8 232
 .b8 200
 .b8 171
 .b8 2
 .b64 0
 .b64 0
 .b64 tmp98
 .b64 tmp101
 .b8 6
 .b8 0
 .b8 144
 .b8 180
 .b8 228
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp101
 .b64 tmp104
 .b8 6
 .b8 0
 .b8 144
 .b8 180
 .b8 228
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp104
 .b64 func_end18
 .b8 6
 .b8 0
 .b8 144
 .b8 180
 .b8 228
 .b8 200
 .b8 171
 .b8 2
 .b64 0
 .b64 0
 .b64 tmp99
 .b64 tmp101
 .b8 6
 .b8 0
 .b8 144
 .b8 176
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 tmp101
 .b64 tmp103
 .b8 6
 .b8 0
 .b8 144
 .b8 176
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 tmp103
 .b64 func_end18
 .b8 6
 .b8 0
 .b8 144
 .b8 176
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 0
 .b64 0
 .b64 tmp101
 .b64 tmp101
 .b8 6
 .b8 0
 .b8 144
 .b8 181
 .b8 228
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp101
 .b64 tmp105
 .b8 6
 .b8 0
 .b8 144
 .b8 181
 .b8 228
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp105
 .b64 func_end18
 .b8 6
 .b8 0
 .b8 144
 .b8 181
 .b8 228
 .b8 200
 .b8 171
 .b8 2
 .b64 0
 .b64 0
}
.section .debug_ranges {
}
.section .debug_pubnames {
 .b32 479
 .b8 2
 .b8 0
 .b32 .debug_info
 .b32 4469
 .b32 2723
 .b8 114
 .b8 101
 .b8 99
 .b8 116
 .b8 105
 .b8 102
 .b8 105
 .b8 101
 .b8 100
 .b8 76
 .b8 105
 .b8 110
 .b8 101
 .b8 97
 .b8 114
 .b8 85
 .b8 110
 .b8 105
 .b8 116
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101
 .b8 0

 .b32 687
 .b8 102
 .b8 100
 .b8 105
 .b8 118
 .b8 105
 .b8 100
 .b8 101
 .b8 102
 .b8 0

 .b32 929
 .b8 95
 .b8 90
 .b8 56
 .b8 95
 .b8 80
 .b8 111
 .b8 119
 .b8 95
 .b8 105
 .b8 110
 .b8 116
 .b8 73
 .b8 102
 .b8 69
 .b8 84
 .b8 95
 .b8 83
 .b8 48
 .b8 95
 .b8 105
 .b8 0

 .b32 2246
 .b8 114
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 97
 .b8 108
 .b8 115
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100
 .b8 0

 .b32 2840
 .b8 82
 .b8 66
 .b8 77
 .b8 98
 .b8 105
 .b8 110
 .b8 97
 .b8 114
 .b8 121
 .b8 0

 .b32 1798
 .b8 105
 .b8 100
 .b8 101
 .b8 110
 .b8 116
 .b8 105
 .b8 116
 .b8 121
 .b8 0

 .b32 2628
 .b8 114
 .b8 101
 .b8 99
 .b8 116
 .b8 105
 .b8 102
 .b8 105
 .b8 101
 .b8 100
 .b8 76
 .b8 105
 .b8 110
 .b8 101
 .b8 97
 .b8 114
 .b8 85
 .b8 110
 .b8 105
 .b8 116
 .b8 0

 .b32 1329
 .b8 115
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100
 .b8 0

 .b32 2151
 .b8 103
 .b8 97
 .b8 117
 .b8 115
 .b8 115
 .b8 105
 .b8 97
 .b8 110
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101
 .b8 0

 .b32 645
 .b8 115
 .b8 113
 .b8 114
 .b8 116
 .b8 102
 .b8 0

 .b32 790
 .b8 116
 .b8 97
 .b8 110
 .b8 104
 .b8 102
 .b8 0

 .b32 832
 .b8 95
 .b8 90
 .b8 51
 .b8 112
 .b8 111
 .b8 119
 .b8 102
 .b8 105
 .b8 0

 .b32 549
 .b8 97
 .b8 99
 .b8 116
 .b8 105
 .b8 118
 .b8 101
 .b8 71
 .b8 114
 .b8 111
 .b8 117
 .b8 112
 .b8 115
 .b8 83
 .b8 104
 .b8 97
 .b8 114
 .b8 101
 .b8 100
 .b8 0

 .b32 750
 .b8 101
 .b8 120
 .b8 112
 .b8 102
 .b8 0

 .b32 3992
 .b8 67
 .b8 87
 .b8 70
 .b8 101
 .b8 101
 .b8 100
 .b8 102
 .b8 111
 .b8 114
 .b8 119
 .b8 97
 .b8 114
 .b8 100
 .b8 79
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116
 .b8 75
 .b8 101
 .b8 114
 .b8 110
 .b8 101
 .b8 108
 .b8 0

 .b32 3338
 .b8 67
 .b8 87
 .b8 70
 .b8 101
 .b8 101
 .b8 100
 .b8 102
 .b8 111
 .b8 114
 .b8 119
 .b8 97
 .b8 114
 .b8 100
 .b8 72
 .b8 105
 .b8 100
 .b8 100
 .b8 101
 .b8 110
 .b8 75
 .b8 101
 .b8 114
 .b8 110
 .b8 101
 .b8 108
 .b8 0

 .b32 2942
 .b8 69
 .b8 118
 .b8 97
 .b8 108
 .b8 117
 .b8 97
 .b8 116
 .b8 101
 .b8 0

 .b32 2441
 .b8 114
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 97
 .b8 108
 .b8 115
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101
 .b8 0

 .b32 3201
 .b8 69
 .b8 118
 .b8 97
 .b8 108
 .b8 117
 .b8 97
 .b8 116
 .b8 101
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101
 .b8 0

 .b32 1972
 .b8 103
 .b8 97
 .b8 117
 .b8 115
 .b8 115
 .b8 105
 .b8 97
 .b8 110
 .b8 0

 .b32 1871
 .b8 105
 .b8 100
 .b8 101
 .b8 110
 .b8 116
 .b8 105
 .b8 116
 .b8 121
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101
 .b8 0

 .b32 1589
 .b8 116
 .b8 97
 .b8 110
 .b8 104
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101
 .b8 0

 .b32 1159
 .b8 95
 .b8 90
 .b8 52
 .b8 115
 .b8 113
 .b8 114
 .b8 116
 .b8 102
 .b8 0

 .b32 1496
 .b8 115
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100
 .b8 95
 .b8 100
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101
 .b8 0

 .b32 0
}
